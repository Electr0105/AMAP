This is a simple document outlining the ways in which a basic HTML page can be
improved using Django phrases.


Front End:
"{% load static %}" instructs Django to load a specifc folder, in this case, static from the highest
directory. This folder can contain both css files and image assets.

“{% extends 'base.html'%}” instructs Django to essentially load a particular html file and use it as a
template. Certain changes need to be made to a typical html file for it to be used as a template, although
it’s pretty straightforward. Essentially, all you need to do is write in the code you want to be repeated (nav bar, footer, etc.)
and indicate where you want Django to ‘import’ additional code.
This should be used to reduce redundant code. Anything that is shared throughout the site should
be put in the template/base file.

“{% block … %} / {% endblock %}” indicates where you want Django to add your custom code to a template. Unique blocks can be used,
such as block head, block content etc. but it has to be referenced within the original template.


Back End:
The back end variables and dictionaries can be coded and passed in Python from the ‘Views.py’ file.
Every page must be referenced in Views.py for Django to be able to load it.
Essentially, each function handles the question of “When said page is requested,
what do I do/give it?”. As mentioned, custom code can be writted and passed as variables to the HTML,
such as access Vase objects and searching within the database.